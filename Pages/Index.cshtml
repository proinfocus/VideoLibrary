@page "{Id:long?}"
@using VideoLibrary.Models
@inject QuickDBS.IQuickDBS db

@section Styles {
<style>
    .actions {
        display: flex;
        justify-content: space-between;
        align-items:center;
        font-size: 0.7rem;
        margin: 5px
    }
    .actions a {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: #000;
        gap: 5px;
    }

</style>
}
@{
    string errorMessage = string.Empty;
    string RedirectToSelf = string.Empty;

    long Id = Convert.ToInt32(RouteData.Values["Id"]);
    if (Id != 0)
    {
        var deleteResult = db.DeleteById<Video>(Id);            
        if (deleteResult)
        {
            Program.FetchNew = true;
            RedirectToSelf = "location.href = '.'";
        }
        else
            errorMessage = "Record deletion failed.";
    }

    ViewData["Title"] = "List of Videos";

    string editIcon = "<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='green' class='bi bi-pencil' viewBox='0 0 16 16'><path d='M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z'/></svg>";
    string deleteIcon = "<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='red' class='bi bi-trash' viewBox='0 0 16 16'><path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z'/><path fill-rule='evenodd' d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'/></svg>";
    
    IList<Video> model;
    if (Program.FetchNew)
    {
        Program.CachedVideos = db.GetAll<Video>();
        Program.FetchNew = false;
    }

    model = Program.CachedVideos;
}

<div>    
    <div class="row">
        <p class="text-danger">@errorMessage</p>
    </div>
            
    <div class="mt-2 row">
        <div class="col">
            <a href="/Videos/Add" class="btn btn-primary">Create New</a>
        </div>

        <div class="col">
            <select class="form-control" onchange="updateFilter(this)">
                <option value="">(Choose Channel Name to Filter)</option>
                @foreach (var item in model.GroupBy(a => a.ChannelName))
                {
                    <option value="@item.Key">@item.Key</option>
                }
            </select>
        </div>
    </div>  

    @if (model != null)
    {
        <div class="mt-4 row">
        @foreach (var item in model.OrderByDescending(a=>a.Id))
        {            
            string link = item.Link;
            try {
                link = item?.Link?.Split('=')[1];
            }
            catch {}
            <div class="video-card">
                <div class="actions">
                    <a data-tag="edit" title="Update Video" href="/Videos/Update/@item.Id"></a>
                    <a data-tag="delete" title="Delete Video" href="javascript:confirmDelete(@item.Id)"></a>
                </div>
                <a href="@item?.Link" target="_blank">
                    <img style="width: 100%" src='https://img.youtube.com/vi/@link/0.jpg' />
                </a>
                <small>@item?.Category</small><br/>
                <small class="video-channel text-danger">@item?.ChannelName</small>
                <h6 class="my-1">@item?.Title</h6>
            </div>
        }
        </div>
    }
</div>
@section Scripts {
<script>
    @Html.Raw(RedirectToSelf)
    const editTags = document.querySelectorAll("a[data-tag='edit']")
    editTags.forEach(i => i.innerHTML = "@Html.Raw(editIcon) Update")

    const deleteTags = document.querySelectorAll("a[data-tag='delete']")
    deleteTags.forEach(i => i.innerHTML = "@Html.Raw(deleteIcon) Delete")

    const cards = document.querySelectorAll(".video-card")
    cards.forEach(i => i.classList.add("my-2", "col-sm-6", "col-md-4", "col-lg-3", "col-xl-2"))

    function confirmDelete(id) {
        if (confirm("Do you want to delete the current record?"))
            location.href = "/"+ id;        
    }

    function updateFilter(th) {
        const items = document.querySelectorAll(".video-card .video-channel")
        items.forEach(i => {
            i.parentElement.style.display = "none"
            if (i.innerText == th.value || th.value == "")
                i.parentElement.style.display = "block"
        })
    }    
</script>
}